{
index = N
for (g in 1:length(col_counts))
{
index = index - row_counts[g]
segments(0,index,M,index,col=4,lty=2,lwd=1)
}
}
}
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,3.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
pdf(file = "sbm_example_adj.pdf", width = 6,height = 6, bg = "white")
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 1.75)
dev.off()
par(mar=c(0,0,3.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
setwd("~/Dropbox/UCD/Meetings/160516 CASI Limerick/Presentation/Figures")
require(sna)
pos1 <- c(0,0)
pos2 <- c(0,1.5)
pos3 <- c(1.5,0)
pos4 <- c(5,1)
pos5 <- c(5,0)
pos6 <- c(2,3)
pos7 <- c(4,2)
positions <- rbind(pos1,pos2,pos3,pos4,pos5,pos6,pos7)
cols <- c(1,1,1,2,2,3,3)
counts <- c(3,2)
adj <- matrix(0,7,7)
adj[1,2] = adj[2,1] = adj[1,3] = adj[3,1] = adj[2,3] = adj[3,2] = 1
adj[4,6] = adj[4,7] = adj[5,6] = adj[5,7] = 1
adj[6,2] = adj[6,3] = adj[7,1] = adj[7,2] = 1
PlotSociomatrix <- function(adj,row_counts=NULL,col_counts=NULL,true_allocations=NULL,main="",...)
{
N <- nrow(adj)
M <- ncol(adj)
colours <- rep(1,N)
if (!is.null(true_allocations))
{
palette <- rainbow(max(true_allocations))
colours = palette[true_allocations]
}
plot(1:M,1:M,xlim=c(0,M),ylim=c(0,N),type="n",xaxt="n",yaxt="n",xlab="",ylab="",bty="n",mar=c(0,0,0,0),main=main,...)
segments(0,0,0,N)
segments(0,0,M,0)
segments(M,0,M,N)
segments(0,N,M,N)
if (prod(row_counts==col_counts)==1) segments(M,0,0,N,col=2)
for (i in 1:N) for (j in 1:M) if (adj[i,j] > 0) rect(xleft = j-1, ybottom = N-i, xright = j, ytop = N-i+1, col=colours[i], border = colours[i])
if (!is.null(col_counts))
{
index = 0
for (g in 1:length(col_counts))
{
index = index + col_counts[g]
segments(index,0,index,N,col=4,lty=2,lwd=1)
}
}
if (!is.null(row_counts))
{
index = N
for (g in 1:length(col_counts))
{
index = index - row_counts[g]
segments(0,index,M,index,col=4,lty=2,lwd=1)
}
}
}
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,3.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
pdf(file = "sbm_example_adj.pdf", width = 6,height = 6, bg = "white")
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 1.75)
dev.off()
par(mar=c(0,0,3.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
setwd("~/Dropbox/UCD/Meetings/160516 CASI Limerick/Presentation/Figures")
require(sna)
pos1 <- c(0,0)
pos2 <- c(0,1.5)
pos3 <- c(1.5,0)
pos4 <- c(5,1)
pos5 <- c(5,0)
pos6 <- c(2,3)
pos7 <- c(3.5,2.5)
positions <- rbind(pos1,pos2,pos3,pos4,pos5,pos6,pos7)
cols <- c(1,1,1,2,2,3,3)
counts <- c(3,2)
adj <- matrix(0,7,7)
adj[1,2] = adj[2,1] = adj[1,3] = adj[3,1] = adj[2,3] = adj[3,2] = 1
adj[4,6] = adj[4,7] = adj[5,6] = adj[5,7] = 1
adj[6,2] = adj[6,3] = adj[7,1] = adj[7,2] = 1
PlotSociomatrix <- function(adj,row_counts=NULL,col_counts=NULL,true_allocations=NULL,main="",...)
{
N <- nrow(adj)
M <- ncol(adj)
colours <- rep(1,N)
if (!is.null(true_allocations))
{
palette <- rainbow(max(true_allocations))
colours = palette[true_allocations]
}
plot(1:M,1:M,xlim=c(0,M),ylim=c(0,N),type="n",xaxt="n",yaxt="n",xlab="",ylab="",bty="n",mar=c(0,0,0,0),main=main,...)
segments(0,0,0,N)
segments(0,0,M,0)
segments(M,0,M,N)
segments(0,N,M,N)
if (prod(row_counts==col_counts)==1) segments(M,0,0,N,col=2)
for (i in 1:N) for (j in 1:M) if (adj[i,j] > 0) rect(xleft = j-1, ybottom = N-i, xright = j, ytop = N-i+1, col=colours[i], border = colours[i])
if (!is.null(col_counts))
{
index = 0
for (g in 1:length(col_counts))
{
index = index + col_counts[g]
segments(index,0,index,N,col=4,lty=2,lwd=1)
}
}
if (!is.null(row_counts))
{
index = N
for (g in 1:length(col_counts))
{
index = index - row_counts[g]
segments(0,index,M,index,col=4,lty=2,lwd=1)
}
}
}
par(mar=c(0,0,3.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
setwd("~/Dropbox/UCD/Meetings/160516 CASI Limerick/Presentation/Figures")
require(sna)
pos1 <- c(0,0)
pos2 <- c(0,1.5)
pos3 <- c(1.5,0)
pos4 <- c(5,1)
pos5 <- c(5,0)
pos6 <- c(2,3)
pos7 <- c(3.5,2.5)
positions <- rbind(pos1,pos2,pos3,pos4,pos5,pos6,pos7)
cols <- c(1,1,1,2,2,3,3)
counts <- c(3,2)
adj <- matrix(0,7,7)
adj[1,2] = adj[2,1] = adj[1,3] = adj[3,1] = adj[2,3] = adj[3,2] = 1
adj[4,6] = adj[4,7] = adj[5,6] = adj[5,7] = 1
adj[6,2] = adj[6,3] = adj[7,1] = adj[7,2] = 1
PlotSociomatrix <- function(adj,row_counts=NULL,col_counts=NULL,true_allocations=NULL,main="",...)
{
N <- nrow(adj)
M <- ncol(adj)
colours <- rep(1,N)
if (!is.null(true_allocations))
{
palette <- rainbow(max(true_allocations))
colours = palette[true_allocations]
}
plot(1:M,1:M,xlim=c(0,M),ylim=c(0,N),type="n",xaxt="n",yaxt="n",xlab="",ylab="",bty="n",mar=c(0,0,0,0),main=main,...)
segments(0,0,0,N)
segments(0,0,M,0)
segments(M,0,M,N)
segments(0,N,M,N)
if (prod(row_counts==col_counts)==1) segments(M,0,0,N,col=2)
for (i in 1:N) for (j in 1:M) if (adj[i,j] > 0) rect(xleft = j-1, ybottom = N-i, xright = j, ytop = N-i+1, col=colours[i], border = colours[i])
if (!is.null(col_counts))
{
index = 0
for (g in 1:length(col_counts))
{
index = index + col_counts[g]
segments(index,0,index,N,col=4,lty=2,lwd=1)
}
}
if (!is.null(row_counts))
{
index = N
for (g in 1:length(col_counts))
{
index = index - row_counts[g]
segments(0,index,M,index,col=4,lty=2,lwd=1)
}
}
}
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,3.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
pdf(file = "sbm_example_adj.pdf", width = 6,height = 6, bg = "white")
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 1.75)
dev.off()
?par
par(mar=c(0,0,1.6,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
par(mar=c(0,0,1,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,1,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
par(mar=c(0,0,0,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
pdf(file = "sbm_example_graph.pdf", width = 6,height = 4, bg = "white")
par(mar=c(0,0,1,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
par(mar=c(0,0,2,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 1.75)
setwd("~/Dropbox/UCD/Meetings/160516 CASI Limerick/Presentation/Figures")
require(sna)
pos1 <- c(0,0)
pos2 <- c(0,1.5)
pos3 <- c(1.5,0)
pos4 <- c(5,1)
pos5 <- c(5,0)
pos6 <- c(2,3)
pos7 <- c(3.5,2.5)
positions <- rbind(pos1,pos2,pos3,pos4,pos5,pos6,pos7)
cols <- c(1,1,1,2,2,3,3)
counts <- c(3,2)
adj <- matrix(0,7,7)
adj[1,2] = adj[2,1] = adj[1,3] = adj[3,1] = adj[2,3] = adj[3,2] = 1
adj[4,6] = adj[4,7] = adj[5,6] = adj[5,7] = 1
adj[6,2] = adj[6,3] = adj[7,1] = adj[7,2] = 1
PlotSociomatrix <- function(adj,row_counts=NULL,col_counts=NULL,true_allocations=NULL,main="",...)
{
N <- nrow(adj)
M <- ncol(adj)
colours <- rep(1,N)
if (!is.null(true_allocations))
{
palette <- rainbow(max(true_allocations))
colours = palette[true_allocations]
}
plot(1:M,1:M,xlim=c(0,M),ylim=c(0,N),type="n",xaxt="n",yaxt="n",xlab="",ylab="",bty="n",mar=c(0,0,0,0),main=main,...)
segments(0,0,0,N)
segments(0,0,M,0)
segments(M,0,M,N)
segments(0,N,M,N)
if (prod(row_counts==col_counts)==1) segments(M,0,0,N,col=2)
for (i in 1:N) for (j in 1:M) if (adj[i,j] > 0) rect(xleft = j-1, ybottom = N-i, xright = j, ytop = N-i+1, col=colours[i], border = colours[i])
if (!is.null(col_counts))
{
index = 0
for (g in 1:length(col_counts))
{
index = index + col_counts[g]
segments(index,0,index,N,col=4,lty=2,lwd=1)
}
}
if (!is.null(row_counts))
{
index = N
for (g in 1:length(col_counts))
{
index = index - row_counts[g]
segments(0,index,M,index,col=4,lty=2,lwd=1)
}
}
}
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,2,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
pdf(file = "sbm_example_adj.pdf", width = 6,height = 6, bg = "white")
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 1.75)
dev.off()
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,2,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=1.75)
dev.off()
pdf(file = "sbm_example_adj.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,2,0))
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 1.75)
dev.off()
setwd("~/Dropbox/UCD/Meetings/160516 CASI Limerick/Presentation/Figures")
require(sna)
pos1 <- c(0,0)
pos2 <- c(0,1.5)
pos3 <- c(1.5,0)
pos4 <- c(5,1)
pos5 <- c(5,0)
pos6 <- c(2,3)
pos7 <- c(3.5,2.5)
positions <- rbind(pos1,pos2,pos3,pos4,pos5,pos6,pos7)
cols <- c(1,1,1,2,2,3,3)
counts <- c(3,2)
adj <- matrix(0,7,7)
adj[1,2] = adj[2,1] = adj[1,3] = adj[3,1] = adj[2,3] = adj[3,2] = 1
adj[4,6] = adj[4,7] = adj[5,6] = adj[5,7] = 1
adj[6,2] = adj[6,3] = adj[7,1] = adj[7,2] = 1
PlotSociomatrix <- function(adj,row_counts=NULL,col_counts=NULL,true_allocations=NULL,main="",...)
{
N <- nrow(adj)
M <- ncol(adj)
colours <- rep(1,N)
if (!is.null(true_allocations))
{
palette <- rainbow(max(true_allocations))
colours = palette[true_allocations]
}
plot(1:M,1:M,xlim=c(0,M),ylim=c(0,N),type="n",xaxt="n",yaxt="n",xlab="",ylab="",bty="n",mar=c(0,0,0,0),main=main,...)
segments(0,0,0,N)
segments(0,0,M,0)
segments(M,0,M,N)
segments(0,N,M,N)
if (prod(row_counts==col_counts)==1) segments(M,0,0,N,col=2)
for (i in 1:N) for (j in 1:M) if (adj[i,j] > 0) rect(xleft = j-1, ybottom = N-i, xright = j, ytop = N-i+1, col=colours[i], border = colours[i])
if (!is.null(col_counts))
{
index = 0
for (g in 1:length(col_counts))
{
index = index + col_counts[g]
segments(index,0,index,N,col=4,lty=2,lwd=1)
}
}
if (!is.null(row_counts))
{
index = N
for (g in 1:length(col_counts))
{
index = index - row_counts[g]
segments(0,index,M,index,col=4,lty=2,lwd=1)
}
}
}
pdf(file = "sbm_example_graph.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0,0,2,0))
gplot(dat = adj,
coord = positions,
vertex.cex = 2,
vertex.col = cols+4,
main="SBM example",
cex.main=2.25)
dev.off()
pdf(file = "sbm_example_adj.pdf", width = 6,height = 6, bg = "white")
par(mar=c(0.5,0.5,2.5,0.5))
PlotSociomatrix(adj = adj, row_counts = counts, col_counts = counts, main = "Reordered adjacency matrix", cex.main = 2.25)
dev.off()
read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv")
read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv")
read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = F)
read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
plot(gdp)
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
plot(gdp)
plot(gdp, type = "b", col = 4, lwd = 2, cex = 2)
plot(gdp, type = "b", col = 4, lwd = 2, cex = 1.25)
plot(gdp, type = "b", col = 4, lwd = 2, cex = 1.25, pch = 20)
plot(gdp, type = "b", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
lines(gdp, col = 4, lwd = 2)
plot(gdp, type = "p", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
lines(gdp, col = 4, lwd = 2)
abline(v=2008)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
abline(v=2008)
text(2008,min(gdp$gdp),"as")
text(2008,min(gdp$gdp),"2008",pos = 1)
text(2008,min(gdp$gdp),"2008",pos = 2)
text(2008,min(gdp$gdp),"2008",pos = 3)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
abline(v=2008)
text(2008,min(gdp$gdp),"2008",pos = 4,cex=0.75)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
text(2008,min(gdp$gdp)+min(gdp$gdp)/10,"2008",pos = 4,cex=0.75)
text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
abline(v=2008)
text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.5)
text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
abline(v=2008)
text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
pdf("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.pdf", width=6,height=6, bg="white")
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "")
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
dev.off()
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "Ireland's Gross Domestic Product from 1993 to 2015")
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "Ireland's Gross Domestic Product")
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
pdf("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.pdf", width=6,height=6, bg="white")
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "Ireland's Gross Domestic Product")
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.25, pch = 20)
lines(gdp, col = 4, lwd = 2)
dev.off()
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
pdf("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.pdf", width=6,height=6, bg="white")
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "Ireland's Gross Domestic Product", cex.main = 1.5)
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.5, pch = 20)
lines(gdp, col = 4, lwd = 3)
dev.off()
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "GDP", main = "Ireland's Gross Domestic Product", cex.main = 1.5)
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.5, pch = 20)
lines(gdp, col = 4, lwd = 3)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "current US$", ylab = "GDP", main = "Ireland's Gross Domestic Product per capita", cex.main = 1.5)
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "current US$", main = "Ireland's Gross Domestic Product per capita", cex.main = 1.5)
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.5, pch = 20)
lines(gdp, col = 4, lwd = 3)
gdp <- read.csv("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.csv", header = T)
pdf("/home/riccardo/Dropbox/Job applications/2016 Postdoc Vienna/Presentation/Figures/gdp.pdf", width=6,height=6, bg="white")
plot(gdp, type = "n", col = 4, lwd = 2, cex = 1.25, pch = 20, xlab = "Year", ylab = "current US$", main = "Ireland's Gross Domestic Product per capita", cex.main = 1.5)
abline(v=2008)
# text(2008,min(gdp$gdp)+min(gdp$gdp)/5,"2008",pos = 4,cex=0.75,offset = 0.1)
points(gdp, type = "p", col = 4, cex = 1.5, pch = 20)
lines(gdp, col = 4, lwd = 3)
dev.off()
